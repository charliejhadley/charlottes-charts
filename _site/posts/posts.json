[
  {
    "path": "posts/2022-03-30-advent-calendars-in-march/",
    "title": "Advent calendars in March",
    "description": "Rehousing an old script for making animated advent calendars with {ggplot2}.",
    "author": [
      {
        "name": "Charlie Joey Hadley",
        "url": {}
      }
    ],
    "date": "2022-03-30",
    "categories": [],
    "contents": "\nBack in 2018 I set myself the goal of an advent of R tips with a photo of a Christmassy coffee. It was an unwise decision, there weren’t enough good festive coffees for 24 enjoyable drinks. I created a script to create this animated GIF in {ggplot2}.\n\nThe original blogpost went really hard on trying to make a reproducible advent calendar. The goal of this blog is to give me a nice and quick way to show stuff. So away with that. Here’s some useful code I might reuse.\nTo start this chart off we need to create our doors and find their centres:\n\n\nset.seed(1)\nportrait_door_centers <- tibble(\n  x = rep(seq(1, 10, 3), 6),\n  y = rep(seq(1, 16, 3), times = 1, each = 4),\n  door_number = sample(1:24))\nset.seed(1)\nlandscape_door_centers <- tibble(\n  y = rep(seq(1, 10, 3), 6),\n  x = rep(seq(1, 16, 3), times = 1, each = 4),\n  door_number = sample(1:24))\n\n\n\nNow we can chart these\n\n\ngg_advent_portrait <- portrait_door_centers %>%\n  ggplot(aes(x, y)) +\n  geom_tile(color = \"black\",\n            size = 0.6,\n            linetype = \"dotted\",\n            alpha = 0) +\n  geom_label(aes(label = door_number)) +\n  coord_fixed() +\n  theme_void() +\n  NULL\n\ngg_advent_landscape <- landscape_door_centers %>%\n  ggplot(aes(x, y)) +\n  geom_tile(color = \"black\",\n            size = 0.6,\n            linetype = \"dotted\",\n            alpha = 0) +\n  geom_label(aes(label = door_number)) +\n  coord_fixed() +\n  theme_void() +\n  NULL\n\ngg_advent_landscape + gg_advent_portrait\n\n\n\n\nI saved all the Christmassy drinks into a .csv file which requires a little bit of wrangling.\n\n\nread_csv(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\" , \"24-days-of-christmassy-drinks.csv\"))\n\n\n# A tibble: 24 × 4\n   drink.name                           retailer  type           year\n   <chr>                                <chr>     <chr>         <dbl>\n 1 Christmas brulee latte               Starbucks coffee         2018\n 2 Flat white cinnamon                  Starbucks coffee         2018\n 3 Toffee nut latte                     Starbucks coffee         2018\n 4 Gingerbread latte                    Starbucks coffee         2018\n 5 Eggnog latte                         Starbucks coffee         2018\n 6 Salted caramel brownie hot chocolate Starbucks hot chocolate  2018\n 7 Caramelised almond brittle latte     Café Nero coffee         2018\n 8 Salted caramel latte                 Café Nero coffee         2018\n 9 Belgian truffle hot chocolate        Café Nero hot chocolate  2018\n10 Winter spiced hot chocolate          Café Nero hot chocolate  2018\n# … with 14 more rows\n\n\n\nchristmassy_drinks_2018 <- read_csv(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\" , \"24-days-of-christmassy-drinks.csv\")) %>%\n  clean_names() %>% \n  filter(year == 2018) %>%\n  slice(landscape_door_centers$door_number) %>%\n  mutate(door_number = 1:24)\n\nlandscape_door_treats <- christmassy_drinks_2018 %>%\n  left_join(landscape_door_centers)\n\nlandscape_door_treats <- landscape_door_treats %>%\n  mutate(drink_name = str_wrap(drink_name, 20))\n\n\n\nThese can be added to the squares:\n\n\ngg_landscape_door_treats <- landscape_door_treats %>%\n  ggplot(aes(x, y)) +\n  geom_tile(color = \"black\",\n            size = 0.6,\n            linetype = \"dotted\",\n            alpha = 0) +\n  geom_label(aes(label = drink_name),\n             nudge_y = 0.5, # give room for logo\n             size = 4) +\n  theme_void() +\n  coord_fixed()\ngg_landscape_door_treats\n\n\n\n\nI’ve chosen to use annotation_custom() to add the images to the calendar, which requires {magick} and {grid} to read in the data and create rasterGrob objects.\n\n\nlibrary(magick)\nlibrary(grid)\ncoffee_house_logos <- list.files(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\"), pattern = \"logo\", full.names = TRUE)\n\ncoffee_house_names <- str_remove(basename(coffee_house_logos), \"_.*\") %>% \n  str_replace(\"-\", \" \") %>% \n  str_to_title() %>% \n  str_replace(\"Mccafe\", \"McCafé\") %>% \n  str_replace(\"Cafe Nero\", \"Café Nero\")\n\ncoffee_house_names\n\n\n[1] \"Café Nero\" \"Costa\"     \"Greggs\"    \"McCafé\"    \"Pret\"     \n[6] \"Starbucks\"\n\ncoffee_house_data <- set_names(coffee_house_logos, coffee_house_names)\n\nmake_logo_grob <- function(img_path){\n  \n  image_read(img_path) %>%\n  rasterGrob(interpolate = T)\n  \n}\n\ncoffee_house_grobs <- map(coffee_house_data, ~ make_logo_grob(.x))\n\n\n\nI then use pwalk() to iteratively add the logos:\n\n\ngg_logoed_treats <- gg_landscape_door_treats\n\nlandscape_door_treats %>%\n  pwalk(function(x, y, retailer, ...){\n    \n    logo <- coffee_house_grobs[[retailer]]\n      \n    gg_logoed_treats <<- gg_logoed_treats +\n      annotation_custom(logo, ymin = y - 1.25, ymax = y - 0.25, xmin = x - 0.5, xmax = x + 0.5)\n    \n  })\ngg_logoed_treats\n\n\n\nIteratively opening the doors\nThe next thing I did was find a Christmassy background image so I could iteratively open up doors. The {ggpubr} package provides background_image() for adding the image:\n\n\nlibrary(ggpubr)\nchristmassy_background <- image_read(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\", \"santa-3016939_640.jpg\"))\n\ncardboard_background <- image_read(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\", \"cardboard-effect.jpg\"))\n\ngg_advent_landscape <- landscape_door_centers %>%\n  ggplot(aes(x, y)) +\n  background_image(christmassy_background) +\n  geom_tile(color = \"black\",\n            size = 0.6,\n            linetype = \"dotted\",\n            alpha = 0) +\n  geom_label(aes(label = door_number)) +\n  theme_void() +\n  coord_fixed()\ngg_advent_landscape\n\n\n\n\nHere’s a function to iteratively open doors:\n\n\nopen_advent_doors <- function(gg_advent,\n                              advent_treats,\n                              open_doors) {\n  gg_local <- gg_advent\n\n  advent_treats %>%\n    filter(door_number %in% open_doors) %>%\n    pwalk(function(x, y, retailer, drink_name, ...) {\n      \n      logo <- coffee_house_grobs[[retailer]]\n      \n      gg_local <<- gg_local +\n        annotation_custom(\n          cardboard_background %>%\n            image_crop(\"-200x400\") %>%\n            rasterGrob(interpolate = T),\n          ymin = y - 1.5,\n          ymax = y + 1.5,\n          xmin = x - 2,\n          xmax = x + 2\n        ) +\n        annotation_custom(\n          logo,\n          ymin = y - 1.25,\n          ymax = y - 0.25,\n          xmin = x - 0.5,\n          xmax = x + 0.5\n        ) +\n        geom_label(\n          data = tibble(x, y, drink_name),\n          aes(\n            label = drink_name,\n            x = x,\n            y = y\n          ),\n          nudge_y = 0.5,\n          # give room for logo\n          size = 5\n        )\n    })\n\n  gg_local\n}\n\n\n\nHere’s the calendar after opening 10 doors:\n\n\nopen_advent_doors(gg_advent_landscape,\n                    landscape_door_treats,\n                    1:10)\n\n\n\n\nTo animate the doors opening I would like to use {gganimate} but I’m not sure it’ll handle this? So instead I programmtically generate a GIF.\n\n\ntibble(remaining_days = 1:24) %>%\n  rowwise() %>%\n  mutate(doors = list(1:remaining_days)) %>%\n  pwalk(function(doors, ...) {\n    opened_door <- open_advent_doors(\n      gg_advent_landscape,\n      landscape_door_treats,\n      doors\n    )\n\n    img_path <- here::here(\n        \"_posts\", \n        \"2022-03-30-advent-calendars-in-march\",\n        paste0(\n          \"gg_iterative_opened_door_\",\n          formatC(\n            length(doors),\n            width = 2,\n            format = \"d\",\n            flag = \"0\"\n          ),\n          \".png\"\n        )\n      )\n    \n    ggsave(\n      img_path,\n      opened_door,\n      width = 12,\n      height = 8\n    )\n    \n    image_read(img_path) %>%\n      image_trim() %>%\n      image_resize(\"1400x\") %>%\n      image_write(img_path)\n    \n  })\n\ndoor_open_images <- list.files(here::here(\"_posts\", \"2022-03-30-advent-calendars-in-march\"), pattern = \"gg_iterative_opened_door\", full.names = TRUE)\n\n\ndoor_open_images %>%\n  tibble(img = .) %>%\n  map(function(img){image_read(img)}) %>%\n  image_join() %>%\n  image_animate(fps = 0.5) %>%\n  image_write(here::here(\n        \"_posts\", \"2022-03-30-advent-calendars-in-march\", \"gg_animated_door_openings.gif\"))\n\nunlink(door_open_images)\n\n\n\n\n\n\n",
    "preview": "posts/2022-03-30-advent-calendars-in-march/gg_animated_door_openings.gif",
    "last_modified": "2022-03-30T19:45:04+01:00",
    "input_file": "advent-calendars-in-march.knit.md"
  }
]
